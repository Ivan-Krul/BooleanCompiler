#include <list>
#include "Type.h"

extern std::pair<std::string, Type> TypeList[] = {
	{"INIT",{"INIT","init"}},
	{"BEGCOMMENT",{"BEGCOMMENT","/*"}},
	{"ENDCOMMENT",{"ENDCOMMENT","*/"}},
	{"SEMICOLON",{"SEMICOLON",";"}},
	{"SPACE(T)",{"SPACE(T)","\t"}},
	{"SPACE(N)",{"SPACE(N)","\n"}},
	{"SPACE(R)",{"SPACE(R)","\r"}},
	{"SPACE(S)",{"SPACE(S)"," "}},
	{"TRUE",{"TRUE","true"}},
	{"FALSE",{"FALSE","false"}},
	{"ASSIGN",{"ASSIGN","="}},
	{"VCC",{"VCC","vcc"}},
	{"GND",{"GND","gnd"}},
	{"ADDRESS",{"ADDRESS","|"}},
	{"ARROWR",{"ARROWR","->"}},
	{"ARROWL",{"ARROWL","<-"}},
	{"AND",{"AND","and"}},
	{"OR",{"OR","or"}},
	{"NOT",{"NOT","not"}},
	{"RPAR",{"RPAR",")"}},
	{"LPAR",{"LPAR","("}},
	{"BUTTON",{"BUTTON","button"}},
	{"SWITCH",{"SWITCH","switch"}},
	{"LED",{"LED","led"}},
	{"RSPAR",{"RSPAR","]"}},
	{"LSPAR",{"LSPAR","["}}
};

extern std::pair<std::string, Type> AlphabetVar[] = {
	{"CHAR(A)",{"CHAR(A)","A"}},
	{"CHAR(B)",{"CHAR(B)","B"}},
	{"CHAR(C)",{"CHAR(C)","C"}},
	{"CHAR(D)",{"CHAR(D)","D"}},
	{"CHAR(C)",{"CHAR(C)","C"}},
	{"CHAR(E)",{"CHAR(E)","E"}},
	{"CHAR(F)",{"CHAR(F)","F"}},
	{"CHAR(G)",{"CHAR(G)","G"}},
	{"CHAR(H)",{"CHAR(H)","H"}},
	{"CHAR(I)",{"CHAR(I)","I"}},
	{"CHAR(J)",{"CHAR(J)","J"}},
	{"CHAR(K)",{"CHAR(K)","K"}},
	{"CHAR(L)",{"CHAR(L)","L"}},
	{"CHAR(M)",{"CHAR(M)","M"}},
	{"CHAR(N)",{"CHAR(N)","N"}},
	{"CHAR(O)",{"CHAR(O)","O"}},
	{"CHAR(P)",{"CHAR(P)","P"}},
	{"CHAR(Q)",{"CHAR(Q)","Q"}},
	{"CHAR(R)",{"CHAR(R)","R"}},
	{"CHAR(S)",{"CHAR(S)","S"}},
	{"CHAR(T)",{"CHAR(T)","T"}},
	{"CHAR(U)",{"CHAR(U)","U"}},
	{"CHAR(V)",{"CHAR(V)","V"}},
	{"CHAR(W)",{"CHAR(W)","W"}},
	{"CHAR(X)",{"CHAR(X)","X"}},
	{"CHAR(Y)",{"CHAR(Y)","Y"}},
	{"CHAR(Z)",{"CHAR(Z)","Z"}},

	{"CHAR(A)",{"CHAR(A)","a"}},
	{"CHAR(B)",{"CHAR(B)","b"}},
	{"CHAR(C)",{"CHAR(C)","c"}},
	{"CHAR(D)",{"CHAR(D)","d"}},
	{"CHAR(C)",{"CHAR(C)","c"}},
	{"CHAR(E)",{"CHAR(E)","e"}},
	{"CHAR(F)",{"CHAR(F)","f"}},
	{"CHAR(G)",{"CHAR(G)","g"}},
	{"CHAR(H)",{"CHAR(H)","h"}},
	{"CHAR(I)",{"CHAR(I)","i"}},
	{"CHAR(J)",{"CHAR(J)","j"}},
	{"CHAR(K)",{"CHAR(K)","k"}},
	{"CHAR(L)",{"CHAR(L)","l"}},
	{"CHAR(M)",{"CHAR(M)","m"}},
	{"CHAR(N)",{"CHAR(N)","n"}},
	{"CHAR(O)",{"CHAR(O)","o"}},
	{"CHAR(P)",{"CHAR(P)","p"}},
	{"CHAR(Q)",{"CHAR(Q)","q"}},
	{"CHAR(R)",{"CHAR(R)","r"}},
	{"CHAR(S)",{"CHAR(S)","s"}},
	{"CHAR(T)",{"CHAR(T)","t"}},
	{"CHAR(U)",{"CHAR(U)","u"}},
	{"CHAR(V)",{"CHAR(V)","v"}},
	{"CHAR(W)",{"CHAR(W)","w"}},
	{"CHAR(X)",{"CHAR(X)","x"}},
	{"CHAR(Y)",{"CHAR(Y)","y"}},
	{"CHAR(Z)",{"CHAR(Z)","z"}}
};

static size_t AlphabetVarLen = std::size(AlphabetVar);
static size_t TypeListLen = std::size(TypeList);
